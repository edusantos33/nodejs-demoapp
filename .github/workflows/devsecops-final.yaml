name: DevSecOps Full Pipeline

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  issues: write

jobs:

  # --- Secrets Scanning com Gitleaks ---
  secrets_gitleaks:
    name: Secret Scan - Gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # --- SAST com Semgrep ---
  sast_semgrep:
    name: SAST - Semgrep
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: semgrep --config p/owasp-top-ten --json --output semgrep.json .

  # --- SCA com Snyk ---
  sca-snyk:
    name: SCA - Snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --json-file-output=snyk-result.json #--severity-threshold=high

  # --- DAST com ZAP ---
  dast_zap:
    name: DAST - ZAP Baseline Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://fantastic-space-zebra-96v44prxx7wcx4jr-3000.app.github.dev/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
